# simple find
function f() {
  DIR=$2
  if [ -z "$DIR" ]; then
    DIR="."
  fi

  find $DIR -name "*$1*"
}

# git tmp branch shortcut
function git_tmp_bname() {
  echo $(git_bname)_tmp
}
function mktmp() {
  git checkout -b $(git_tmp_bname)
}
function mvtmp() {
  git checkout $(git_tmp_bname)
}
function deltmp() {
  git branch -d $(git_tmp_bname)
}
function git_base_bname() {
  echo $(git_bname) | sed -e "s/_tmp$//g"
}
function mvbase() {
  git checkout $(git_base_bname)
}
function rebbase() {
  git rebase -i $(git_base_bname)
}

# git pull origin current
function gf() {
  git fetch --all --prune
}

function gp() {
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  git pull origin $current_branch
}

function is_bash_shell() {
  if [ $SHELL = "/bin/bash" ]; then
    true
  else
    false
  fi
}

function read_source() {
  local filepath=$1
  if [ -z $filepath ]; then
    return
  fi

  if [ -f $filepath ]; then
    . $filepath
  fi
}

function read_dotfiles_source() {
  local filepath=$1
  if [ -z $filepath ]; then
    return
  fi

  local dotfiles_dir=~/.dotfiles
  read_source $dotfiles_dir/$filepath
}

function replace() {
  local str1=$1
  shift
  local str2=$1
  shift
  local dir=$*

  if [ -z ${str1} -o -z ${str2} ]; then
    echo "[USAGE] replace str1 str2 dir"
    return
  fi

  if [ -z ${dir} ]; then
    dir="./"
  fi

  ag -l ${str1} -R ${(z)dir} | xargs sed -i '' -e "s/${str1}/${str2}/g"
}
